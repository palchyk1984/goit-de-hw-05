from kafka import KafkaConsumer
from kafka_config import kafka_config
import json
import sys
import time

TOPICS = ["temperature_alerts_hellcat_topic", "humidity_alerts_hellcat_topic"]

def create_consumer(topics, group_id='alerts_consumer_group'):
    """
    –°—Ç–≤–æ—Ä—é—î Kafka Consumer –¥–ª—è –∑–∞–¥–∞–Ω–∏—Ö —Ç–æ–ø—ñ–∫—ñ–≤.

    :param topics: –°–ø–∏—Å–æ–∫ —Ç–æ–ø—ñ–∫—ñ–≤ –¥–ª—è –ø—ñ–¥–ø–∏—Å–∫–∏.
    :param group_id: –Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä –≥—Ä—É–ø–∏ —Å–ø–æ–∂–∏–≤–∞—á—ñ–≤.
    :return: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π KafkaConsumer.
    """
    try:
        consumer = KafkaConsumer(
            *topics,
            bootstrap_servers=kafka_config['bootstrap_servers'],
            security_protocol=kafka_config['security_protocol'],
            sasl_mechanism=kafka_config['sasl_mechanism'],
            sasl_plain_username=kafka_config['username'],
            sasl_plain_password=kafka_config['password'],
            value_deserializer=lambda v: json.loads(v.decode('utf-8')) if v else None,
            key_deserializer=lambda v: v.decode('utf-8') if v else None,
            auto_offset_reset='earliest',  # –ß–∏—Ç–∞—î–º–æ –≤—Å—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ø–æ—á–∞—Ç–∫—É
            enable_auto_commit=False,  # –ö–µ—Ä—É—î–º–æ –∫–æ–º—ñ—Ç–∞–º–∏ –≤—Ä—É—á–Ω—É
            group_id=group_id
        )
        return consumer
    except Exception as e:
        print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ Kafka Consumer: {e}")
        sys.exit(1)

def format_timestamp(ts):
    """–§–æ—Ä–º–∞—Ç—É—î —á–∞—Å–æ–≤—É –º—ñ—Ç–∫—É —É —á–∏—Ç–∞–±–µ–ª—å–Ω–∏–π –≤–∏–≥–ª—è–¥."""
    return time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(ts / 1000))

def main():
    consumer = create_consumer(TOPICS)

    print(f"üì° –ü—ñ–¥–ø–∏—Å–∞–Ω–æ –Ω–∞ —Ç–æ–ø—ñ–∫–∏: {', '.join(TOPICS)}. –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∞–ª–µ—Ä—Ç—ñ–≤...")

    try:
        for message in consumer:
            if message.value is None:
                print(f"‚ö†Ô∏è –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ—Ä–æ–∂–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —Ç–æ–ø—ñ–∫—É `{message.topic}`. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ.")
                continue

            try:
                alert = message.value
                alert_topic = message.topic
                sensor_id = alert.get("sensor_id", "Unknown")
                timestamp = alert.get("timestamp", 0)
                value = alert.get("value", "N/A")
                message_text = alert.get("message", "–ù–µ–º–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")

                print(f"\n‚ö†Ô∏è  –ê–õ–ï–†–¢ [{alert_topic.upper()}]")
                print(f"   üìç –î–∞—Ç—á–∏–∫: {sensor_id[:8]}...")
                print(f"   üïí –ß–∞—Å: {format_timestamp(timestamp)}")
                print(f"   üìä –ó–Ω–∞—á–µ–Ω–Ω—è: {value}")
                print(f"   üìù –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {message_text}")
                print("=" * 40)

                # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
                consumer.commit()

            except json.JSONDecodeError:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–µ–∫–æ–¥—É–≤–∞–Ω–Ω—è JSON —É —Ç–æ–ø—ñ–∫—É `{message.topic}`: {message.value}")
                continue

    except KeyboardInterrupt:
        print("\nüõë –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑—É–ø–∏–Ω–µ–Ω–æ.")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ–±—Ä–æ–±–∫–∏ –∞–ª–µ—Ä—Ç—ñ–≤: {e}")
    finally:
        consumer.close()
        print("üîå –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ Kafka –∑–∞–∫—Ä–∏—Ç–æ.")

if __name__ == "__main__":
    main()
